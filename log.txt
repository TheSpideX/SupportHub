 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 Checking leader status change: Object
 Modal state check: Object
 Final modal state check: Object
 Leader status changed: false -> true
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
 Leader status changed: false -> true
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
 Leader status changed: false -> true
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
 Leader status changed: false -> true
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
AuthMonitorWidget.tsx:165 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
AuthMonitorWidget.tsx:184 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
AuthMonitorWidget.tsx:195 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
AuthMonitorWidget.tsx:203 Leader status changed: false -> true
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
AuthMonitorWidget.tsx:165 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
AuthMonitorWidget.tsx:184 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
AuthMonitorWidget.tsx:195 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
AuthMonitorWidget.tsx:203 Leader status changed: false -> true
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
AuthMonitorWidget.tsx:165 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
AuthMonitorWidget.tsx:184 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
AuthMonitorWidget.tsx:195 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
AuthMonitorWidget.tsx:203 Leader status changed: false -> true
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
TeamManagementPage.tsx:196 TeamManagementPage: Fetching teams...
TeamContext.tsx:254 Using cached my teams data
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
 Leader status changed: false -> true
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
 Leader status changed: false -> true
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
 Leader status changed: false -> true
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
 Leader status changed: false -> true
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 Checking leader status change: {isLeader: true, isLeaderTab: false, isAnyModalOpen: false}
 Modal state check: {contextValue: false, domValue: false, visibleModals: false, modalCount: 0}
 Final modal state check: {contextValue: false, domValue: false, visibleModals: false, finalDecision: false}
 Leader status changed: false -> true
 [AuthMonitorService.ts] Forcing new leader election {tabId: 'tab_iq4xwbu_1744602573875', deviceId: 'device_8vsj3n'}
 [PrimusAuthService][PrimusAuthService.ts] Forcing new leader election {component: 'PrimusAuthService', tabId: 'tab_iq4xwbu_1744602573875', deviceId: 'device_8vsj3n'}
 [PrimusAuthService][PrimusAuthService.ts] Registered tab for leader election (forced) {component: 'PrimusAuthService', tabId: 'tab_iq4xwbu_1744602573875', deviceId: 'device_8vsj3n', isVisible: true, forceElection: true}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [PrimusAuthService][PrimusAuthService.ts] Primus event received: room:joined {args: '{"room":"tab:tab_iq4xwbu_1744602573875"}', component: 'PrimusAuthService'}
 [PrimusAuthService][PrimusAuthService.ts] ✅ Primus room joined successfully {component: 'PrimusAuthService', room: 'tab:tab_iq4xwbu_1744602573875', deviceId: 'device_8vsj3n', tabId: 'tab_iq4xwbu_1744602573875', socketId: ƒ, …}
 ✅ Primus Room Joined {room: 'tab:tab_iq4xwbu_1744602573875', deviceId: 'device_8vsj3n', tabId: 'tab_iq4xwbu_1744602573875', socketId: ƒ}
 [PrimusAuthService][PrimusAuthService.ts] Primus event received: leader:failed {args: '{"previousLeaderId":"tab_iq4xwbu_1744602573875","r…son":"forced_election","timestamp":1744614329396}', component: 'PrimusAuthService'}
 [PrimusAuthService][PrimusAuthService.ts] Leader failed: tab_iq4xwbu_1744602573875 (reason: forced_election) {component: 'PrimusAuthService', previousLeaderId: 'tab_iq4xwbu_1744602573875', reason: 'forced_election', timestamp: 1744614329396, thisTabId: 'tab_iq4xwbu_1744602573875', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
 [PrimusAuthService][PrimusAuthService.ts] Primus event received: room:joined {args: '{"room":"device:device_8vsj3n"}', component: 'PrimusAuthService'}
 [PrimusAuthService][PrimusAuthService.ts] ✅ Primus room joined successfully {component: 'PrimusAuthService', room: 'device:device_8vsj3n', deviceId: 'device_8vsj3n', tabId: 'tab_iq4xwbu_1744602573875', socketId: ƒ, …}
 ✅ Primus Room Joined {room: 'device:device_8vsj3n', deviceId: 'device_8vsj3n', tabId: 'tab_iq4xwbu_1744602573875', socketId: ƒ}
 [PrimusAuthService][PrimusAuthService.ts] Primus event received: leader:failed {args: '{"previousLeaderId":"tab_iq4xwbu_1744602573875","r…son":"forced_election","timestamp":1744614329396}', component: 'PrimusAuthService'}
 [PrimusAuthService][PrimusAuthService.ts] Leader failed: tab_iq4xwbu_1744602573875 (reason: forced_election) {component: 'PrimusAuthService', previousLeaderId: 'tab_iq4xwbu_1744602573875', reason: 'forced_election', timestamp: 1744614329396, thisTabId: 'tab_iq4xwbu_1744602573875', …}
 [PrimusAuthService][PrimusAuthService.ts] Primus event received: auth:tab_registered {args: '{"tabId":"tab_iq4xwbu_1744602573875","deviceId":"d…","timestamp":1744614329398,"forceElection":true}', component: 'PrimusAuthService'}
 [PrimusAuthService][PrimusAuthService.ts] Tab registration confirmed by server {data: {…}, component: 'PrimusAuthService', tabId: 'tab_iq4xwbu_1744602573875', deviceId: 'device_8vsj3n'}
 [PrimusAuthService][PrimusAuthService.ts] Primus event received: leader:elected {args: '{"leaderId":"tab_iq4xwbu_1744602573875","version":…14329397},"timestamp":1744614329398,"isYou":true}', component: 'PrimusAuthService'}
 [PrimusAuthService][PrimusAuthService.ts] Leader elected: tab_iq4xwbu_1744602573875 (this tab: is leader) {electedTabId: 'tab_iq4xwbu_1744602573875', thisTabId: 'tab_iq4xwbu_1744602573875', wasLeader: true, isLeader: true, deviceId: 'device_8vsj3n', …}
 [PrimusAuthService][PrimusAuthService.ts] Updated leader info in localStorage {component: 'PrimusAuthService', leaderId: 'tab_iq4xwbu_1744602573875', timestamp: 1744614329469, reason: 'election'}
 [AuthMonitorService.ts] Leader elected: tab_iq4xwbu_1744602573875 (this tab: is leader) {electedTabId: 'tab_iq4xwbu_1744602573875', thisTabId: 'tab_iq4xwbu_1744602573875', wasLeader: true, isLeader: true, deviceId: 'device_8vsj3n'}
 Leader elected event: This tab is leader {tabId: 'tab_iq4xwbu_1744602573875', isLeader: true, timestamp: 1744614329475}
 Leader elected event: This tab is leader {tabId: 'tab_iq4xwbu_1744602573875', isLeader: true, timestamp: 1744614329475}
 👑 This tab is now the LEADER {electedTabId: 'tab_iq4xwbu_1744602573875', thisTabId: 'tab_iq4xwbu_1744602573875', deviceId: 'device_8vsj3n', comparison: 'tab_iq4xwbu_1744602573875 === tab_iq4xwbu_1744602573875 is true', tabIdType: 'string', …}
 ✅ MATCH: Tab IDs match exactly!
 [PrimusAuthService][PrimusAuthService.ts] Primus event received: leader:elected {args: '{"leaderId":"tab_iq4xwbu_1744602573875","version":…estamp":1744614329397},"timestamp":1744614329398}', component: 'PrimusAuthService'}
 [PrimusAuthService][PrimusAuthService.ts] Leader elected: tab_iq4xwbu_1744602573875 (this tab: is leader) {electedTabId: 'tab_iq4xwbu_1744602573875', thisTabId: 'tab_iq4xwbu_1744602573875', wasLeader: true, isLeader: true, deviceId: 'device_8vsj3n', …}
 👑 This tab is now the LEADER {electedTabId: 'tab_iq4xwbu_1744602573875', thisTabId: 'tab_iq4xwbu_1744602573875', deviceId: 'device_8vsj3n', comparison: 'tab_iq4xwbu_1744602573875 === tab_iq4xwbu_1744602573875 is true', tabIdType: 'string', …}
 ✅ MATCH: Tab IDs match exactly!
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/admin/team-management'}
 TeamManagementPage: Fetching teams...
 Using cached my teams data
