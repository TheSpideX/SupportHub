 [vite] connecting...
 [storage.utils.ts] Storage type localStorage available: true Object
 [storage.utils.ts] Storage type sessionStorage available: true Object
 [storage.utils.ts] Storage type cookie available: true Object
 [TokenService.ts] TokenService initialized with refresh threshold: 300s, heartbeat: 30s Object
 [CrossTabService.ts] Initializing CrossTabService Object
 [CrossTabService.ts] SharedWorker communication initialized Object
 [TokenService.ts] Token existence check Object
 [TokenService.ts] User activity tracking initialized with improved handling Object
 [TokenService.ts] Inactivity check scheduled every 300 seconds Object
 [TokenService.ts] Cross-tab communication initialized via unified service Object
 [TokenService.ts] Device fingerprint initialized Object
 [TokenService.ts] Token refresh scheduled in 604429 seconds Object
 [TokenService.ts] TokenService fully initialized for authenticated user Object
 [TokenService.ts] Created new TokenService instance Object
 [SessionService.ts] Cross-tab communication initialized for SessionService Object
 [SessionService.ts] SessionService initialized Object
 [TokenService.ts] Using existing TokenService instance Object
 [TokenService.ts] Token existence check Object
 [TokenService.ts] Tab became visible, checking token status Object
 [auth/init][init.ts] Initializing authentication system Object
 [TokenService.ts] TokenService already initialized, returning existing instance Object
 [SecurityService.ts] Security context initialized Object
 [SecurityService.ts] Device fingerprint generated Object
 [SecurityService.ts] SecurityService initialized Object
 [SessionService.ts] Cross-tab communication initialized for SessionService Object
 [SessionService.ts] SessionService initialized Object
 [AuthService.ts] Cross-tab communication initialized for AuthService with SharedWorker Object
 [TokenService.ts] Token existence check Object
 [AuthService.ts] Cross-tab communication initialized with SharedWorker Object
 [AuthService.ts] AuthService initialized Object
 [AuthService.ts] Cross-tab communication initialized for AuthService with SharedWorker Object
 [TokenService.ts] CSRF protection initialized Object
 [TokenService.ts] Token existence check Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage authentication check effect with detailed state Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [LoginPage][LoginPage.tsx] Auth state changed in LoginPage Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [AuthService.ts] [AuthService] Verifying session from server Object
 [App.tsx] Tab initialized Object
 [App][App.tsx] Starting auth initialization (attempt #1) Object
 [AuthService.ts] Initializing auth service and checking for existing session Object
 [AuthService.ts] Cookie check: No auth cookies found Object
 [AuthService.ts] Attempting to validate session with backend Object
 [TokenService.ts] Token existence check Object
 [CrossTabService.ts] Cleaning up CrossTabService resources Object
 [LoginPage][LoginPage.tsx] LoginPage authentication check effect with detailed state Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [LoginPage][LoginPage.tsx] Auth state changed in LoginPage Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [AuthService.ts] [AuthService] Verifying session from server Object
 [App.tsx] Tab initialized Object
 [App][App.tsx] Auth initialization already triggered, skipping Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [vite] connected.
 [TokenService.ts] Token status response received Object
 [TokenService.ts] Token expires in 829 seconds Object
 [AuthService.ts] [AuthService] Session verified from server Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage authentication check effect with detailed state Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [LoginPage][LoginPage.tsx] User authenticated, redirecting from login page Object
 [LoginPage][LoginPage.tsx] Auth state changed in LoginPage Object
logger.ts:127 [LoginPage][LoginPage.tsx] Direct auth service state check Object
logger.ts:137 [LoginPage.tsx] [LoginPage] Authentication verified with server, redirecting Object
logger.ts:137 [AuthService.ts] [AuthService] Session verified from server Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [LoginPage][LoginPage.tsx] Auth state changed in LoginPage Object
logger.ts:127 [LoginPage][LoginPage.tsx] Direct auth service state check Object
logger.ts:137 [LoginPage.tsx] [LoginPage] Authentication verified with server, redirecting Object
logger.ts:127 [AuthService.ts] Fetching user data Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthService.ts] [AuthService] Received auth state change from worker Object
logger.ts:137 [AuthService.ts] [AuthService] Received auth state change from worker Object
logger.ts:137 [AuthService.ts] Updating auth state from worker Object
logger.ts:137 [AuthService.ts] [AuthService] Received auth state change from worker Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth service state check Object
logger.ts:137 [AuthService.ts] Valid session found, restoring user session Object
logger.ts:137 [AuthService.ts] [AuthService] Received auth state change from worker Object
logger.ts:137 [AuthService.ts] [AuthService] Received auth state change from worker Object
logger.ts:137 [AuthService.ts] Updating auth state from worker Object
logger.ts:137 [AuthService.ts] [AuthService] Received auth state change from worker Object
logger.ts:137 [SessionService.ts] Starting session tracking Object
logger.ts:127 [SessionService.ts] Creating default session Object
logger.ts:127 [SessionService.ts] Default session created Object
logger.ts:127 [SessionService.ts] Activity tracking set up Object
logger.ts:127 [SessionService.ts] Setting up session expiry check Object
logger.ts:127 [SessionService.ts] Syncing session with server Object
logger.ts:127 [SessionService.ts] Using CSRF token for session sync Object
logger.ts:137 [SecurityService.ts] Device fingerprint generated Object
logger.ts:127 [SessionService.ts] Preparing session sync data Object
logger.ts:137 [AuthService.ts] Session restored successfully Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [App][App.tsx] User session restored successfully Object
logger.ts:137 [App][App.tsx] Auth initialized successfully Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [SessionService.ts] Session sync response Object
logger.ts:127 [AuthService.ts] Processing storage event Object
logger.ts:127 [AuthService.ts] Processing storage event Object
logger.ts:127 [TokenService.ts] Token existence check Object
logger.ts:127 [TokenService.ts] Tab became visible, checking token status Object
logger.ts:127 [App.tsx] Tab became visible, verifying auth state with server (tabId: tab_68m8ojm_1742796887495, isLeader: false) Object
logger.ts:127 [AuthService.ts] [AuthService] Verifying session from server Object
logger.ts:127 [TokenService.ts] Token status response received Object
logger.ts:137 [TokenService.ts] Token expires in 819 seconds Object
logger.ts:137 [AuthService.ts] [AuthService] Session verified from server Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796916019_yzwtjwl'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796896748_47fil9w'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796893410_l25l3sa'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796888022_h5gnoca'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796895348_cxrsog7'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796897867_hgio227'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796888048_vtnvf3e'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796919733_dvi50uq'}
logger.ts:127 [TokenService.ts] Token existence check {hasFlag: true, cookies: {…}}
logger.ts:127 [TokenService.ts] Tab became visible, checking token status {}
logger.ts:127 [App.tsx] Tab became visible, verifying auth state with server (tabId: tab_68m8ojm_1742796887495, isLeader: false) {}
logger.ts:127 [AuthService.ts] [AuthService] Verifying session from server {}
logger.ts:127 [TokenService.ts] Token status response received {status: 200, ok: true, statusText: 'OK'}
logger.ts:137 [AuthService.ts] [AuthService] Session verified from server {}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [TokenService.ts] Token expires in 795 seconds {expiresInMs: 795000, refreshThreshold: 300000, shouldRefresh: false}
logger.ts:127 [TokenService.ts] Token existence check {hasFlag: true, cookies: {…}}
logger.ts:127 [TokenService.ts] Tab became visible, checking token status {}
logger.ts:127 [App.tsx] Tab became visible, verifying auth state with server (tabId: tab_68m8ojm_1742796887495, isLeader: false) {}
logger.ts:127 [AuthService.ts] [AuthService] Verifying session from server {}
logger.ts:127 [TokenService.ts] Token status response received {status: 200, ok: true, statusText: 'OK'}
logger.ts:137 [TokenService.ts] Token expires in 729 seconds {expiresInMs: 729000, refreshThreshold: 300000, shouldRefresh: false}
logger.ts:137 [AuthService.ts] [AuthService] Session verified from server {}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796989305_ww21jcn'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742796990033_bws1wb4'}
logger.ts:127 [TokenService.ts] Token existence check {hasFlag: true, cookies: {…}}
logger.ts:127 [TokenService.ts] Tab became visible, checking token status {}
logger.ts:127 [App.tsx] Tab became visible, verifying auth state with server (tabId: tab_68m8ojm_1742796887495, isLeader: false) {}
logger.ts:127 [AuthService.ts] [AuthService] Verifying session from server {}
logger.ts:127 [TokenService.ts] Token status response received {status: 200, ok: true, statusText: 'OK'}
logger.ts:137 [TokenService.ts] Token expires in 725 seconds {expiresInMs: 725000, refreshThreshold: 300000, shouldRefresh: false}
logger.ts:137 [AuthService.ts] [AuthService] Session verified from server {}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}


this is log of tab 3