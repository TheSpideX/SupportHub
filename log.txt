 [vite] connecting...
 [storage.utils.ts] Storage type localStorage available: true Object
 [storage.utils.ts] Storage type sessionStorage available: true Object
 [storage.utils.ts] Storage type cookie available: true Object
 [TokenService.ts] TokenService initialized with refresh threshold: 300s, heartbeat: 30s Object
 [CrossTabService.ts] Initializing CrossTabService Object
 [CrossTabService.ts] BroadcastChannel communication initialized Object
 [TokenService.ts] Token existence check Object
 [TokenService.ts] User activity tracking initialized with improved handling Object
 [TokenService.ts] Inactivity check scheduled every 300 seconds Object
 [TokenService.ts] Cross-tab communication initialized via unified service Object
 [TokenService.ts] Device fingerprint initialized Object
 [TokenService.ts] Token refresh scheduled in 604422 seconds Object
 [TokenService.ts] TokenService fully initialized for authenticated user Object
 [TokenService.ts] Created new TokenService instance Object
 [SessionService.ts] Cross-tab communication initialized for SessionService Object
 [SessionService.ts] SessionService initialized Object
 [TokenService.ts] Using existing TokenService instance Object
 [auth/init][init.ts] Initializing authentication system Object
 [TokenService.ts] TokenService already initialized, returning existing instance Object
 [SecurityService.ts] Security context initialized Object
 [SecurityService.ts] Device fingerprint generated Object
 [SecurityService.ts] SecurityService initialized Object
 [SessionService.ts] Cross-tab communication initialized for SessionService Object
 [SessionService.ts] SessionService initialized Object
 [AuthService.ts] Cross-tab communication initialized for AuthService Object
 [TokenService.ts] Token existence check Object
 [AuthService.ts] Cross-tab communication initialized for AuthService Object
 [AuthService.ts] AuthService initialized Object
 [AuthService.ts] Cross-tab communication already initialized for AuthService Object
 [TokenService.ts] CSRF protection initialized Object
 [TokenService.ts] Token existence check Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [TokenService.ts] Token existence check Object
 [TokenService.ts] Tab became visible, checking token status Object
 [LoginPage][LoginPage.tsx] LoginPage authentication check effect with detailed state Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [LoginPage][LoginPage.tsx] Auth state changed in LoginPage Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [App][App.tsx] Starting auth initialization (attempt #1) Object
 [AuthService.ts] Initializing auth service and checking for existing session Object
 [AuthService.ts] Cookie check: No auth cookies found Object
 [AuthService.ts] Attempting to validate session with backend Object
 [TokenService.ts] Token existence check Object
 [CrossTabService.ts] Cleaning up CrossTabService resources Object
 [LoginPage][LoginPage.tsx] LoginPage authentication check effect with detailed state Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [LoginPage][LoginPage.tsx] Auth state changed in LoginPage Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [App][App.tsx] Auth initialization already triggered, skipping Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [vite] connected.
 [TokenService.ts] Token status response received Object
 [TokenService.ts] Token expires in 822 seconds Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage rendered with detailed auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [LoginPage][LoginPage.tsx] LoginPage authentication check effect with detailed state Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [LoginPage][LoginPage.tsx] User authenticated, redirecting from login page Object
 [LoginPage][LoginPage.tsx] Auth state changed in LoginPage Object
 [LoginPage][LoginPage.tsx] Direct auth service state check Object
 [AuthService.ts] Fetching user data Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [AuthGuard][AuthGuard.tsx] Auth validation already in progress, skipping Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthService.ts] Valid session found, restoring user session Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [SessionService.ts] Starting session tracking Object
 [SessionService.ts] Creating default session Object
 [SessionService.ts] Default session created Object
 [SessionService.ts] Activity tracking set up Object
 [SessionService.ts] Setting up session expiry check Object
 [SessionService.ts] Syncing session with server Object
 [SessionService.ts] Using CSRF token for session sync Object
 [SecurityService.ts] Device fingerprint generated Object
 [SessionService.ts] Preparing session sync data Object
 [AuthService.ts] Session restored successfully Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [App][App.tsx] User session restored successfully Object
 [App][App.tsx] Auth initialized successfully Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] Auth validation already in progress, skipping Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthService.ts] Processing storage event Object
 [SessionService.ts] Session sync response Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [AuthService][AuthService.ts] Redux store updated with auth state Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [authSlice][authSlice.ts] Auth state initialized in Redux Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [AuthService.ts] Processing storage event Object
 [AuthService.ts] Auth state updated Object
 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ installHook.js:1
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started Object
 [AuthGuard][AuthGuard.tsx] Auth service state check Object
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now Object
 [AuthGuard][AuthGuard.tsx] Calling validateSession API Object
 [useAuth][useAuth.ts] useAuth hook called Object
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:127 [AuthService.ts] Processing storage event Object
logger.ts:127 [AuthService.ts] Auth state updated Object
hook.js:608 [CrossTabService.ts] BroadcastChannel send failed Object
overrideMethod @ hook.js:608
logger.ts:127 [AuthService][AuthService.ts] Redux store updated with auth state Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [authSlice][authSlice.ts] Auth state initialized in Redux Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation Object
hook.js:377 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content Object
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
(anonymous) @ AuthService.ts:195
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752042112_szsineu'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752042237_f620nh9'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752041464_qyi9x8k'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752041498_3k37f5x'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
validateSession @ AuthService.ts:1139
await in validateSession
verifyAuth @ AuthGuard.tsx:114
(anonymous) @ AuthGuard.tsx:155
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
logger.ts:127 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752042439_gyp5g57'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
(anonymous) @ AuthService.ts:118
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752042562_x6f7bci'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752041722_b7g5qzy'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752041776_eieg1ps'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
validateSession @ AuthService.ts:1139
await in validateSession
verifyAuth @ AuthGuard.tsx:114
(anonymous) @ AuthGuard.tsx:155
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
logger.ts:127 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752042652_pegx4yt'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
(anonymous) @ AuthService.ts:195
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752042821_t1q6olm'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752041962_xuuwb95'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752042025_lcrzqlq'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
validateSession @ AuthService.ts:1139
await in validateSession
verifyAuth @ AuthGuard.tsx:114
(anonymous) @ AuthGuard.tsx:155
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
logger.ts:127 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043007_3jywj8m'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
(anonymous) @ AuthService.ts:195
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043142_e0w9ynj'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
validateSession @ AuthService.ts:1139
await in validateSession
verifyAuth @ AuthGuard.tsx:114
(anonymous) @ AuthGuard.tsx:155
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
logger.ts:127 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043368_1jkwqc4'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
(anonymous) @ AuthService.ts:195
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043503_nsqa21r'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752042562_x6f7bci'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752042617_wykpsu9'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
validateSession @ AuthService.ts:1139
await in validateSession
verifyAuth @ AuthGuard.tsx:114
(anonymous) @ AuthGuard.tsx:155
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
logger.ts:127 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043698_e8zjeie'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
(anonymous) @ AuthService.ts:195
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043838_k2trtu7'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
validateSession @ AuthService.ts:1139
await in validateSession
verifyAuth @ AuthGuard.tsx:114
(anonymous) @ AuthGuard.tsx:155
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
logger.ts:127 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752044006_lsyoow2'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
(anonymous) @ AuthService.ts:195
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752044161_ocfl1ug'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043142_e0w9ynj'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043225_6a2dm0l'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
validateSession @ AuthService.ts:1139
await in validateSession
verifyAuth @ AuthGuard.tsx:114
(anonymous) @ AuthGuard.tsx:155
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
logger.ts:127 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752044284_51wcawy'}
logger.ts:127 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
logger.ts:159 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ hook.js:608
error @ logger.ts:159
broadcastMessage @ CrossTabService.ts:297
updateAuthState @ AuthService.ts:336
(anonymous) @ AuthService.ts:195
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
logger.ts:137 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752044409_z5aaspt'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043503_pxnnhhm'}
logger.ts:127 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043598_mdgckbh'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
validateSession @ AuthService.ts:816
await in validateSession
verifyAuth @ AuthGuard.tsx:78
(anonymous) @ AuthGuard.tsx:106
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752044522_pyd49i4'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
(anonymous) @ AuthService.ts:118
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752044653_5or5dkm'}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752043838_k2trtu7'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
validateSession @ AuthService.ts:816
await in validateSession
verifyAuth @ AuthGuard.tsx:78
(anonymous) @ AuthGuard.tsx:106
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752044769_g5d7ks7'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
(anonymous) @ AuthService.ts:118
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752044939_nhpglbu'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
validateSession @ AuthService.ts:816
await in validateSession
verifyAuth @ AuthGuard.tsx:78
(anonymous) @ AuthGuard.tsx:106
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752045063_z36u2pf'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
(anonymous) @ AuthService.ts:118
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752045188_bofwdr5'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
validateSession @ AuthService.ts:816
await in validateSession
verifyAuth @ AuthGuard.tsx:78
(anonymous) @ AuthGuard.tsx:106
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752045309_ulrzl7t'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
(anonymous) @ AuthService.ts:118
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752045441_gsaa3lb'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
validateSession @ AuthService.ts:816
await in validateSession
verifyAuth @ AuthGuard.tsx:78
(anonymous) @ AuthGuard.tsx:106
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752045565_k9dv0fj'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
(anonymous) @ AuthService.ts:118
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752045714_xs9hnyc'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
validateSession @ AuthService.ts:816
await in validateSession
verifyAuth @ AuthGuard.tsx:78
(anonymous) @ AuthGuard.tsx:106
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752045840_0zeemiz'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
(anonymous) @ AuthService.ts:118
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752045966_y9rtn82'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
validateSession @ AuthService.ts:816
await in validateSession
verifyAuth @ AuthGuard.tsx:78
(anonymous) @ AuthGuard.tsx:106
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752046107_dth7huh'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/services/AuthService.ts:118:18)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
(anonymous) @ AuthService.ts:118
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard verifyAuth started {component: 'AuthGuard', isInitialized: false, isAuthenticated: '[REDACTED]', cookies: 'Cookies present', path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] Auth service state check {component: 'AuthGuard', serviceIsAuthenticated: '[REDACTED]', serviceHasUser: false, reduxIsAuthenticated: '[REDACTED]'}
 [AuthGuard][AuthGuard.tsx] Auth not initialized, initializing now {component: 'AuthGuard'}
 [AuthGuard][AuthGuard.tsx] Calling validateSession API {component: 'AuthGuard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [AuthService.ts] Processing storage event {key: 'auth_sync_1742752046233_5hxmo2v'}
 [AuthService.ts] Auth state updated {isAuthenticated: '[REDACTED]'}
 [CrossTabService.ts] BroadcastChannel send failed {error: {…}, stack: "InvalidStateError: Failed to execute 'postMessage'…src/features/auth/components/AuthGuard.tsx:78:27)", code: 11}
overrideMethod @ installHook.js:1
error @ logger.ts:102
broadcastMessage @ CrossTabService.ts:199
updateAuthState @ AuthService.ts:224
validateSession @ AuthService.ts:816
await in validateSession
verifyAuth @ AuthGuard.tsx:78
(anonymous) @ AuthGuard.tsx:106
commitHookEffectListMount @ chunk-GSKIDCVT.js?v=55570dee:16963
commitPassiveMountOnFiber @ chunk-GSKIDCVT.js?v=55570dee:18206
commitPassiveMountEffects_complete @ chunk-GSKIDCVT.js?v=55570dee:18179
commitPassiveMountEffects_begin @ chunk-GSKIDCVT.js?v=55570dee:18169
commitPassiveMountEffects @ chunk-GSKIDCVT.js?v=55570dee:18159
flushPassiveEffectsImpl @ chunk-GSKIDCVT.js?v=55570dee:19543
flushPassiveEffects @ chunk-GSKIDCVT.js?v=55570dee:19500
commitRootImpl @ chunk-GSKIDCVT.js?v=55570dee:19469
commitRoot @ chunk-GSKIDCVT.js?v=55570dee:19330
performSyncWorkOnRoot @ chunk-GSKIDCVT.js?v=55570dee:18948
flushSyncCallbacks @ chunk-GSKIDCVT.js?v=55570dee:9166
(anonymous) @ chunk-GSKIDCVT.js?v=55570dee:18677
 [AuthService][AuthService.ts] Redux store updated with auth state {component: 'AuthService', hasUser: false}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: false, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [authSlice][authSlice.ts] Auth state initialized in Redux {component: 'authSlice', isInitialized: true}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: true, path: '/dashboard', …}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
 [useAuth][useAuth.ts] useAuth hook called {component: 'useAuth', isAuthenticated: '[REDACTED]', isLoading: false, path: '/dashboard'}
 [AuthGuard][AuthGuard.tsx] AuthGuard evaluation {component: 'AuthGuard', isAuthenticated: '[REDACTED]', isInitialized: true, isLoading: false, path: '/dashboard', …}
 [AuthGuard][AuthGuard.tsx] AuthGuard rendering protected content {component: 'AuthGuard', path: '/dashboard'}
